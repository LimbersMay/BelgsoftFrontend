import {TypeWithKey} from "../models";

export const getValidationError = (errorCode: string) => {
    const codeMatcher: TypeWithKey<string> = {
        ERR_NETWORK: 'NETWORK ERROR',

        // Auth errors
        AUTH_ERROR_INCORRECT_PASSWORD: 'INCORRECT PASSWORD',
        AUTH_ERROR_CANNOT_REGISTER_USER: 'SERVER ERROR CANNOT REGISTER USER',
        AUTH_ERROR_CANNOT_LOGIN_USER: 'SERVER ERROR CANNOT LOGIN USER',
        AUTH_ERROR_INVALID_SESSION: 'INVALID SESSION',
        AUTH_ERROR_EMAIL_ALREADY_EXISTS: 'EMAIL ALREADY EXISTS',

        // User errors
        USER_NOT_FOUND: 'USER NOT FOUND',
        USER_NOT_UPDATED: 'SERVER ERROR CANNOT UPDATE USER',
        USER_ERROR_CANNOT_GET_USER: 'SERVER ERROR CANNOT GET USER',
        USER_ERROR_CANNOT_GET_USERS: 'SERVER ERROR CANNOT GET USERS',
        USER_ERROR_CANNOT_CREATE_USER: 'SERVER ERROR CANNOT CREATE USER',
        USER_ERROR_CANNOT_UPDATE_USER: 'SERVER ERROR CANNOT UPDATE USER',
        USER_ERROR_CANNOT_DELETE_USER: 'SERVER ERROR CANNOT DELETE USER',

    }

    return codeMatcher[errorCode] || "Something went wrong";
}